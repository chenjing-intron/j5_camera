/***************************************************************************
* COPYRIGHT NOTICE
* Copyright 2019 Horizon Robotics, Inc.
* All rights reserved.
***************************************************************************/
#ifndef UTILITY_SENSOR_INC_VCAM_SETTING_H_
#define UTILITY_SENSOR_INC_VCAM_SETTING_H_

// config_index bit[8~11] reserved for camera trig mode
#define BIT(i)		(1 << (i))
#define TEST_PATTERN_SERDES	BIT(0)
#define TEST_PATTERN	BIT(1)
#define DPHY_PORTB		BIT(3)
#define DPHY_COPY		BIT(4)
#define I2C_I2C1        BIT(5)

static uint32_t max96712_select_i2c1_setting[] = {
    0x04, 0x52, 0x00, 0x01, 0xc8,  // choose to i2c1
    0x04, 0x52, 0x00, 0x03, 0x55,
    0x04, 0x52, 0x00, 0x07, 0xf0,
    0x00, 0x0f,
};


static uint8_t max96712_quad_yuv_setting_base[4][90] = {
    {
        // link A max9295
        0x04, 0x80, 0x00, 0x06, 0xb1,
        0x04, 0x80, 0x03, 0x11, 0x40,
        0x04, 0x80, 0x03, 0x08, 0x64,
        0x04, 0x80, 0x00, 0x02, 0x43,
        0x04, 0x80, 0x00, 0x10, 0x15,
        0x04, 0x80, 0x00, 0x12, 0x14,
        0x04, 0x80, 0x00, 0x58, 0x80,
        0x04, 0x80, 0x03, 0x30, 0x00,
        0x04, 0x80, 0x03, 0x31, 0x33,
        0x00, 0x01,
        0x04, 0x80, 0x03, 0x18, 0x5e,
        0x00, 0x01,
        0x04, 0x80, 0x00, 0x42, 0xa2,
        0x04, 0x80, 0x00, 0x43, 0xa0,
        0x04, 0x80, 0x00, 0x44, 0x22,
        0x04, 0x80, 0x00, 0x45, 0x34,
        0x04, 0x80, 0x00, 0x00, 0x82,
        0x00, 0x03,
    },
    {
        // link B max9295
        0x04, 0x80, 0x00, 0x06, 0xb1,
        0x04, 0x80, 0x03, 0x11, 0x40,
        0x04, 0x80, 0x03, 0x08, 0x64,
        0x04, 0x80, 0x00, 0x02, 0x43,
        0x04, 0x80, 0x00, 0x10, 0x15,
        0x04, 0x80, 0x00, 0x12, 0x14,
        0x04, 0x80, 0x00, 0x58, 0x80,
        0x04, 0x80, 0x03, 0x30, 0x00,
        0x04, 0x80, 0x03, 0x31, 0x33,
        0x00, 0x01,
        0x04, 0x80, 0x03, 0x18, 0x5e,
        0x00, 0x01,
        0x04, 0x80, 0x00, 0x42, 0xa4,
        0x04, 0x80, 0x00, 0x43, 0xa0,
        0x04, 0x80, 0x00, 0x44, 0x24,
        0x04, 0x80, 0x00, 0x45, 0x34,
        0x04, 0x80, 0x00, 0x00, 0x84,
        0x00, 0x03,
    },
    {
        // link C max9295
        0x04, 0x80, 0x00, 0x06, 0xb1,
        0x04, 0x80, 0x03, 0x11, 0x40,
        0x04, 0x80, 0x03, 0x08, 0x64,
        0x04, 0x80, 0x00, 0x02, 0x43,
        0x04, 0x80, 0x00, 0x10, 0x15,
        0x04, 0x80, 0x00, 0x12, 0x14,
        0x04, 0x80, 0x00, 0x58, 0x80,
        0x04, 0x80, 0x03, 0x30, 0x00,
        0x04, 0x80, 0x03, 0x31, 0x33,
        0x00, 0x01,
        0x04, 0x80, 0x03, 0x18, 0x5e,
        0x00, 0x01,
        0x04, 0x80, 0x00, 0x42, 0xa6,
        0x04, 0x80, 0x00, 0x43, 0xa0,
        0x04, 0x80, 0x00, 0x44, 0x26,
        0x04, 0x80, 0x00, 0x45, 0x34,
        0x04, 0x80, 0x00, 0x00, 0x86,
        0x00, 0x03,
    },
    {
        // link D max9295
        0x04, 0x80, 0x00, 0x06, 0xb1,
        0x04, 0x80, 0x03, 0x11, 0x40,
        0x04, 0x80, 0x03, 0x08, 0x64,
        0x04, 0x80, 0x00, 0x02, 0x43,
        0x04, 0x80, 0x00, 0x10, 0x15,
        0x04, 0x80, 0x00, 0x12, 0x14,
        0x04, 0x80, 0x00, 0x58, 0x80,
        0x04, 0x80, 0x03, 0x30, 0x00,
        0x04, 0x80, 0x03, 0x31, 0x33,
        0x00, 0x01,
        0x04, 0x80, 0x03, 0x18, 0x5e,
        0x00, 0x01,
        0x04, 0x80, 0x00, 0x42, 0xa8,
        0x04, 0x80, 0x00, 0x43, 0xa0,
        0x04, 0x80, 0x00, 0x44, 0x28,
        0x04, 0x80, 0x00, 0x45, 0x34,
        0x04, 0x80, 0x00, 0x00, 0x88,
        0x00, 0x03,
    },
};


static uint8_t max96718_single_yuv_setting_base[] = {
    0x04, 0x80, 0x00, 0x06, 0xb1,
    0x04, 0x80, 0x03, 0x11, 0x40,
    0x04, 0x80, 0x03, 0x08, 0x64,
    0x04, 0x80, 0x00, 0x02, 0x43,
    0x04, 0x80, 0x00, 0x10, 0x15,
    0x04, 0x80, 0x00, 0x12, 0x14,
    0x04, 0x80, 0x00, 0x58, 0x80,
    0x04, 0x80, 0x03, 0x30, 0x00,
    0x04, 0x80, 0x03, 0x31, 0x33,
    0x04, 0x80, 0x00, 0x5b, 0x11,
    0x04, 0x80, 0x00, 0x57, 0x12,
    0x00, 0x03,
    0x04, 0x80, 0x03, 0x18, 0x5e,
    0x00, 0x03,
};

static uint8_t max96712_max9295_yuv_init_setting[] = {
    0x04, 0x52, 0x00, 0x13, 0x75,
    0x00, 0xff,
    0x04, 0x52, 0x14, 0x49, 0x75,  // Enable ErrChPwrUp, Enhance link stability
    0x04, 0x52, 0x15, 0x49, 0x75,
    0x04, 0x52, 0x16, 0x49, 0x75,
    0x04, 0x52, 0x17, 0x49, 0x75,

    0x04, 0x52, 0x00, 0x18, 0x0f,  // base setting
    0x04, 0x52, 0x04, 0x0b, 0x00,
    0x04, 0x52, 0x00, 0xf0, 0x62,
    0x04, 0x52, 0x00, 0xf1, 0xea,
    0x04, 0x52, 0x00, 0xf4, 0x0f,
    0x04, 0x52, 0x08, 0xa2, 0xf4,
    0x00, 0x01,
    0x04, 0x52, 0x08, 0xa3, 0xe4,  // 4lane
    0x04, 0x52, 0x08, 0xa4, 0xe4,
    0x04, 0x52, 0x09, 0x0a, 0xc0,
    0x04, 0x52, 0x09, 0x4a, 0xc0,
    0x04, 0x52, 0x09, 0x8a, 0xc0,
    0x04, 0x52, 0x09, 0xca, 0xc0,
    0x04, 0x52, 0x08, 0xa0, 0x04,
    0x00, 0x01,

    // mapping setting
    0x04, 0x52, 0x09, 0x0b, 0x07,  // mapping linkA
    0x04, 0x52, 0x09, 0x0d, 0x1e,
    0x04, 0x52, 0x09, 0x0e, 0x1e,
    0x04, 0x52, 0x09, 0x0f, 0x00,
    0x04, 0x52, 0x09, 0x10, 0x00,
    0x04, 0x52, 0x09, 0x11, 0x01,
    0x04, 0x52, 0x09, 0x12, 0x01,
    0x04, 0x52, 0x09, 0x2d, 0x55,
    0x00, 0x01,
    0x04, 0x52, 0x09, 0x4b, 0x07,  // mapping linkB
    0x04, 0x52, 0x09, 0x4d, 0x1e,
    0x04, 0x52, 0x09, 0x4e, 0x5e,
    0x04, 0x52, 0x09, 0x4f, 0x00,
    0x04, 0x52, 0x09, 0x50, 0x40,
    0x04, 0x52, 0x09, 0x51, 0x01,
    0x04, 0x52, 0x09, 0x52, 0x41,
    0x04, 0x52, 0x09, 0x6d, 0x55,
    0x00, 0x01,
    0x04, 0x52, 0x09, 0x8b, 0x07,  // mapping linkC
    0x04, 0x52, 0x09, 0x8d, 0x1e,
    0x04, 0x52, 0x09, 0x8e, 0x9e,
    0x04, 0x52, 0x09, 0x8f, 0x00,
    0x04, 0x52, 0x09, 0x90, 0x80,
    0x04, 0x52, 0x09, 0x91, 0x01,
    0x04, 0x52, 0x09, 0x92, 0x81,
    0x04, 0x52, 0x09, 0xad, 0x55,
    0x00, 0x01,
    0x04, 0x52, 0x09, 0xcb, 0x07,  // mapping linkD
    0x04, 0x52, 0x09, 0xcd, 0x1e,
    0x04, 0x52, 0x09, 0xce, 0xde,
    0x04, 0x52, 0x09, 0xcf, 0x00,
    0x04, 0x52, 0x09, 0xd0, 0xc0,
    0x04, 0x52, 0x09, 0xd1, 0x01,
    0x04, 0x52, 0x09, 0xd2, 0xc1,
    0x04, 0x52, 0x09, 0xed, 0x55,
    0x00, 0x01,


    0x04, 0x52, 0x1c, 0x00, 0xf4,  // mipi rate
    0x04, 0x52, 0x1d, 0x00, 0xf4,
    0x04, 0x52, 0x1e, 0x00, 0xf4,
    0x04, 0x52, 0x1f, 0x00, 0xf4,
    0x00, 0xff,
    0x04, 0x52, 0x04, 0x15, 0x34,
    0x04, 0x52, 0x04, 0x18, 0x34,
    0x04, 0x52, 0x04, 0x1b, 0x34,
    0x04, 0x52, 0x04, 0x1e, 0x34,
    0x00, 0xff,
    0x04, 0x52, 0x1c, 0x00, 0xf5,
    0x04, 0x52, 0x1d, 0x00, 0xf5,
    0x04, 0x52, 0x1e, 0x00, 0xf5,
    0x04, 0x52, 0x1f, 0x00, 0xf5,
    0x00, 0x01,
    0x04, 0x52, 0x00, 0x10, 0x11,
    0x04, 0x52, 0x00, 0x11, 0x11,
    0x00, 0x03,
};

static uint8_t max96718_max9295_yuv_init_setting[] = {
    0x04, 0x50, 0x00, 0x10, 0xf3,  // reset
    0x00, 0x03,
    0x04, 0x50, 0x03, 0x13, 0x00,
    0x04, 0x50, 0x14, 0x49, 0xF5,  // Enable ErrChPwrUp, Enhance link stability
    0x04, 0x50, 0x15, 0x49, 0xF5,


    0x04, 0x50, 0x03, 0x30, 0x04,  // 2x4
    0x04, 0x50, 0x03, 0x16, 0x5E,  // dt yuv
    0x04, 0x50, 0x03, 0x17, 0x7E,
    0x04, 0x50, 0x03, 0x18, 0x7A,
    0x04, 0x50, 0x03, 0x19, 0x90,
    0x04, 0x50, 0x03, 0x1A, 0x40,

    0x04, 0x50, 0x01, 0x61, 0x21,  // stream ID
    0x04, 0x50, 0x03, 0x20, 0x34,  // MIPI CSI Port A 1.2G
    0x04, 0x50, 0x03, 0x23, 0x34,  // MIPI CSI Port B 1.2G
    0x00, 0x03,
    0x04, 0x50, 0x04, 0x4B, 0x07,  // mapping
    0x04, 0x50, 0x04, 0x6D, 0x15,
    0x04, 0x50, 0x04, 0x4D, 0x1e,
    0x04, 0x50, 0x04, 0x4E, 0x1e,
    0x04, 0x50, 0x04, 0x4F, 0x00,
    0x04, 0x50, 0x04, 0x50, 0x00,
    0x04, 0x50, 0x04, 0x51, 0x01,
    0x04, 0x50, 0x04, 0x52, 0x01,

    0x04, 0x50, 0x03, 0x13, 0x62,
};

static uint8_t max96718_max9295_yuv_duo_init_setting[] = {
    // 0x04, 0x50, 0x00, 0x10, 0xf3,  // reset
    0x00, 0x03,
    0x04, 0x50, 0x14, 0x49, 0xF5,  // Enable ErrChPwrUp, Enhance link stability
    0x04, 0x50, 0x15, 0x49, 0xF5,

    0x04, 0x50, 0x03, 0x13, 0x00,

    0x04, 0x50, 0x03, 0x30, 0x04,  // 2x4
    0x04, 0x50, 0x03, 0x16, 0x5E,  // dt yuv
    0x04, 0x50, 0x03, 0x17, 0x7E,
    0x04, 0x50, 0x03, 0x18, 0x7A,
    0x04, 0x50, 0x03, 0x19, 0x90,
    0x04, 0x50, 0x03, 0x1A, 0x40,

    0x04, 0x50, 0x03, 0x1D, 0x34,  // MIPI CSI Port A 1.2G
    0x04, 0x50, 0x03, 0x20, 0x34,  // MIPI CSI Port A 1.2G
    0x04, 0x50, 0x03, 0x23, 0x34,  // MIPI CSI Port B 1.2G
    0x04, 0x50, 0x03, 0x26, 0x34,  // MIPI CSI Port B 1.2G
    0x00, 0x03,

    0x04, 0x50, 0x04, 0x4B, 0x07,  // mapping linkA
    0x04, 0x50, 0x04, 0x6D, 0x2a,  // portB
    0x04, 0x50, 0x04, 0x4D, 0x1e,
    0x04, 0x50, 0x04, 0x4E, 0x1e,
    0x04, 0x50, 0x04, 0x4F, 0x00,
    0x04, 0x50, 0x04, 0x50, 0x00,
    0x04, 0x50, 0x04, 0x51, 0x01,
    0x04, 0x50, 0x04, 0x52, 0x01,

    0x04, 0x50, 0x04, 0x8B, 0x07,  // mapping linkB
    0x04, 0x50, 0x04, 0xAD, 0x15,  // portA
    0x04, 0x50, 0x04, 0x8D, 0x1e,
    0x04, 0x50, 0x04, 0x8E, 0x5e,
    0x04, 0x50, 0x04, 0x8F, 0x00,
    0x04, 0x50, 0x04, 0x90, 0x40,
    0x04, 0x50, 0x04, 0x91, 0x01,
    0x04, 0x50, 0x04, 0x92, 0x41,

    // 0x04, 0x50, 0x04, 0x8B, 0x07,  // mapping linkB
    // 0x04, 0x50, 0x04, 0xAD, 0x15,  // portA
    // 0x04, 0x50, 0x04, 0x8D, 0x1e,
    // 0x04, 0x50, 0x04, 0x8E, 0x1e,
    // 0x04, 0x50, 0x04, 0x8F, 0x00,
    // 0x04, 0x50, 0x04, 0x90, 0x00,
    // 0x04, 0x50, 0x04, 0x91, 0x01,
    // 0x04, 0x50, 0x04, 0x92, 0x01,

    0x04, 0x50, 0x01, 0x61, 0x31,  // set stream ID
    // 0x04, 0x50, 0x03, 0x13, 0x62,
    // 0x04, 0x50, 0x03, 0x30, 0x84,  	// MIPI output enable

    /* serial setting */
	0x04, 0x50, 0x00, 0x04, 0x01,       // 96717:GMSL2 3Gbps
	0x04, 0x50, 0x00, 0x12, 0x24,       // reset LINKB
	0x04, 0x50, 0x00, 0x10, 0x23,       // choose LINKA+LINKB and rest LINKA
	0x00, 0xff,

	// open LINKA and close LINKB: MAX9295 - i2c.
	0x04, 0x50, 0x00, 0x01, 0x02,
	0x04, 0x50, 0x00, 0x03, 0x57,
	0x00, 0xff,
    0x00, 0xff,
    0x00, 0xff,
    0x00, 0xff,
    // link A max9295
    0x04, 0x80, 0x00, 0x06, 0xb1,
    0x04, 0x80, 0x03, 0x11, 0x40,
    0x04, 0x80, 0x03, 0x08, 0x64,
    0x04, 0x80, 0x00, 0x02, 0x43,
    0x04, 0x80, 0x00, 0x10, 0x15,
    0x04, 0x80, 0x00, 0x12, 0x14,
    0x04, 0x80, 0x00, 0x58, 0x80,
    0x04, 0x80, 0x03, 0x30, 0x00,
    0x04, 0x80, 0x03, 0x31, 0x33,
    0x00, 0x01,
    0x04, 0x80, 0x03, 0x18, 0x5e,
    0x00, 0x01,
    0x04, 0x80, 0x00, 0x57, 0x12,  // stream ID
    0x04, 0x80, 0x00, 0x5b, 0x11,
    0x00, 0x01,
    0x04, 0x80, 0x00, 0x42, 0xa2,
    0x04, 0x80, 0x00, 0x43, 0xa0,
    0x04, 0x80, 0x00, 0x44, 0x22,
    0x04, 0x80, 0x00, 0x45, 0x34,
    0x04, 0x80, 0x00, 0x00, 0x82,
    0x00, 0x03,

    // open LINKB close LINKA: MAX96717 - i2c.
	0x04, 0x50, 0x00, 0x01, 0x12,       // close LINKA
	0x04, 0x50, 0x00, 0x03, 0x53,       // open LINKB
	0x00, 0xff,
    0x00, 0xff,
    0x00, 0xff,
    0x00, 0xff,

        // link B max9295
    0x04, 0x80, 0x00, 0x06, 0xb1,
    0x04, 0x80, 0x03, 0x11, 0x40,
    0x04, 0x80, 0x03, 0x08, 0x64,
    0x04, 0x80, 0x00, 0x02, 0x43,
    0x04, 0x80, 0x00, 0x10, 0x15,
    0x04, 0x80, 0x00, 0x12, 0x14,
    0x04, 0x80, 0x00, 0x58, 0x80,
    0x04, 0x80, 0x03, 0x30, 0x00,
    0x04, 0x80, 0x03, 0x31, 0x33,
    0x00, 0x01,
    0x04, 0x80, 0x03, 0x18, 0x5e,
    0x00, 0x01,
    0x04, 0x80, 0x00, 0x57, 0x11,  // stream ID
    0x04, 0x80, 0x00, 0x5b, 0x12,
    0x00, 0x01,
    0x04, 0x80, 0x00, 0x42, 0xa4,
    0x04, 0x80, 0x00, 0x43, 0xa0,
    0x04, 0x80, 0x00, 0x44, 0x24,
    0x04, 0x80, 0x00, 0x45, 0x34,
    0x04, 0x80, 0x00, 0x00, 0x84,
    0x00, 0x03,

    // LINKA + LINKB: MAX9295A+MAX96717 config.
	0x04, 0x90, 0x00, 0x01, 0x02,
	0x04, 0x90, 0x00, 0x03, 0x53,
	0x00, 0xFF,
};

static uint8_t max96712_out_port_setting[] = {
    0x04, 0x52, 0x09, 0x2d, 0x15,
    0x04, 0x52, 0x09, 0x6d, 0x15,
    0x04, 0x52, 0x09, 0xad, 0x15,
    0x04, 0x52, 0x09, 0xed, 0x15,
    0x00, 0x03,
};

static uint8_t max96718_out_port_setting[] = {
    0x04, 0x50, 0x04, 0x6d, 0x15,
    0x04, 0x50, 0x04, 0xad, 0x15,
    0x00, 0x03,
};

static uint8_t max9296_stream_on_setting[] = {
	0x04, 0x52, 0x03, 0x13, 0x62,
};

static uint8_t max9296_stream_off_setting[] = {
	0x04, 0x52, 0x03, 0x13, 0x00,
};

static uint8_t max96712_stream_on_setting[] = {
	0x04, 0x52, 0x08, 0xA0, 0x84,  	// MIPI output enable
};

static uint8_t max96712_stream_off_setting[] = {
	0x04, 0x52, 0x08, 0xA0, 0x00,  	// MIPI output enable
};

static uint8_t max96718_stream_on_setting[] = {
	0x04, 0x50, 0x03, 0x30, 0x84,  	// MIPI output enable
};

static uint8_t max96718_stream_off_setting[] = {
	0x04, 0x50, 0x03, 0x30, 0x00,  	// MIPI output enable
};

#endif  // UTILITY_SENSOR_INC_VCAM_SETTING_H_
