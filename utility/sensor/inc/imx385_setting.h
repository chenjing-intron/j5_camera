/***************************************************************************
* COPYRIGHT NOTICE
* Copyright 2019 Horizon Robotics, Inc.
* All rights reserved.
***************************************************************************/
#ifndef UTILITY_SENSOR_INC_IMX385_SETTING_H_
#define UTILITY_SENSOR_INC_IMX385_SETTING_H_

#ifdef __cplusplus
extern "C" {
#endif

#define IMX385_GAIN        	    (0x3014)
#define IMX385_SHS1             (0x3020)
#define IMX385_SHS2             (0x3023)
#define IMX385_SHS3             (0x3026)
#define IMX385_VAMX	            (0x3018)
#define IMX385_HAMX	            (0x301B)
#define IMX385_RHS1		        (0x302C)
#define IMX385_CSI_LANE_MODE    (0x337F)
#define IMX385_INCKFREQ1        (0x3380)
#define IMX385_PIC_SIZE_V       (0x3357)

static uint32_t imx385_stream_on_setting[] = {
	0x3002, 0x00,
	0x3000, 0x00
};

static uint32_t imx385_stream_off_setting[] = {
	0x3000, 0x01
};

static uint32_t imx385_raw12_normal_setting[] = {
	0x3000, 0x01,   //  standby
	0x3005, 0x01,   //  0: 10bit  1:12bit
	0x3007, 0x00,   //  vreverse 0:normal herverse 0:normal
	0x3009, 0x02,   //
	0x300a, 0xf0,   //  blklevel
	0x3012, 0x2c,   //  fixed to 2ch
	0x3013, 0x01,   //  fixex to 01h
	0x3014, 0x07,   //  gain
	0x3018, 0x65,   //  vmax
	0x3019, 0x0E,   //  vmax
	0x301b, 0xA0,   //  hmax
	0x301c, 0x3C,   //  hmax
	0x3020, 0x02,   //  shs1
	0x3021, 0x00,   //  shs1
	0x3044, 0x01,   //  fixed to 01h
	0x3049, 0x0a,   //  vsync output hsync out
	0x3054, 0x66,   //  fixed to 66h
	0x305c, 0x18,   //  INCKSEL1
	0x305d, 0x00,   //  INCKSEL2
	0x305e, 0x20,   //  INCKSEL3
	0x305f, 0x00,   //  INCKSEL4
	0x310b, 0x07,   //  fixed to 07h
	0x3110, 0x12,   //  fixed to 12h
	0x31ed, 0x38,   //  fixed to 38h
	0x3338, 0xd4,   //  fixed to d4h
	0x3339, 0x40,   //  fixed to 40h
	0x333a, 0x10,   //  fixed to 10h
	0x333b, 0x00,   //  fixed to 00h
	0x333c, 0xd4,   //  fixed to d4h
	0x333d, 0x40,   //  fixed to 40h
	0x333e, 0x10,   //  fixed to 10h
	0x333f, 0x00,   //  fixed to 00h
	0x3344, 0x10,   //
	0x3346, 0x03,   //
	0x3357, 0x49,   //  pic_size_v
	0x3358, 0x04,   //  pic_size_v
	0x336b, 0x2f,   //  THSEXIT
	0x336c, 0x1f,   //  TCLKPRE
	0x337d, 0x0c,   //  RAW 12
	0x337e, 0x0c,   //  RAW 12
	0x337f, 0x03,   //  LANE 4
	0x3380, 0x20,   //  INCK_FREQ1 37.125MHZ
	0x3381, 0x25,   //  INCK_FREQ1 37.125MHZ
	0x3382, 0x5f,   //  TCLKPOST
	0x3383, 0x17,   //  THSPREPARE
	0x3384, 0x2f,   //  THSZERO
	0x3385, 0x17,   //  THSTRAIL
	0x3386, 0x17,   //  TCLKTRAIL
	0x3387, 0x0f,   //  TCLKPREPARE
	0x3388, 0x4f,   //  TCLKZERO
	0x3389, 0x27,   //  TLPX
	0x338d, 0xb4,   //  INCK_FREQ2
	0x338e, 0x01,   //  INCK_FREQ2
    //  0x3000, 0x00,
    //  0x3002, 0x00
};

static uint32_t imx385_raw12_dol2_setting[] = {
	0x3000, 0x01,
	0x3005, 0x01,
	0x3007, 0x10,
	0x3009, 0x12,
	0x300a, 0xf0,
	0x300C, 0x11,
	0x3012, 0x2c,
	0x3013, 0x01,
	0x3014, 0x07,
	0x3018, 0x65,
	0x3019, 0x30,
	0x301b, 0x30,
	0x301c, 0x14,
	0x3020, 0x03,
	0x3023, 0x59,
	0x3024, 0x03,
	0x302c, 0x2B,
	0x302d, 0x00,
	0x3043, 0x05,
	0x3044, 0x01,
	0x3049, 0x0a,
	0x3054, 0x66,
	0x305c, 0x18,
	0x305d, 0x00,
	0x305e, 0x20,
	0x305f, 0x00,
	0x3108, 0x00,
	0x3109, 0x01,
	0x310a, 0x00,
	0x310b, 0x07,
	0x3110, 0x12,
	0x31ed, 0x38,
	0x3338, 0xd4,
	0x3339, 0x40,
	0x333a, 0x10,
	0x333b, 0x00,
	0x333c, 0xd4,
	0x333d, 0x40,
	0x333e, 0x10,
	0x333f, 0x00,
	0x3344, 0x10,
	0x3346, 0x03,
	0x3353, 0x00,
	0x3354, 0x00,
	0x3357, 0xDC,
	0x3358, 0x08,
	0x336b, 0x2f,
	0x336c, 0x1f,
	0x337d, 0x0c,
	0x337e, 0x0c,
	0x337f, 0x03,
	0x3380, 0x20,
	0x3381, 0x25,
	0x3382, 0x5f,
	0x3383, 0x17,
	0x3384, 0x2f,
	0x3385, 0x17,
	0x3386, 0x17,
	0x3387, 0x0f,
	0x3388, 0x4f,
	0x3389, 0x27,
	0x338d, 0xb4,
	0x338e, 0x01,
   //  0x3000, 0x00,
   //  0x3002, 0x00
};

#ifdef __cplusplus
}
#endif

#endif  // UTILITY_SENSOR_INC_IMX385_SETTING_H_

