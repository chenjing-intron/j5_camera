/***************************************************************************
* COPYRIGHT NOTICE
* Copyright 2021 Horizon Robotics, Inc.
* All rights reserved.
***************************************************************************/

#ifndef UTILITY_SENSOR_INC_IMX390C_SETTING_H_
#define UTILITY_SENSOR_INC_IMX390C_SETTING_H_

#include <stdint.h>

#define DELAY_FLAG        (0xFFFF)

static uint32_t poc_init_setting[] = {
    0x01, 0x00,
    0x01, 0x1f,
};
static uint32_t max9295_ldo_enable[] = {
	0x10, 0x04, 0x04,
	0x12, 0x10, 0x10,
};
static uint16_t single_imx390c_9295_init_setting[] = {
    0x0010, 0x21,
    DELAY_FLAG, 0x64,
    0x02be, 0x00,
    DELAY_FLAG, 0x32,
    0x02be, 0x18,
    DELAY_FLAG, 0xFF,
    DELAY_FLAG, 0xFF,
    0x0042, 0xa2,
    0x0043, 0x60,
    0x0044, 0xda,
    0x0045, 0x20,
    0x0330, 0x00,
    0x0331, 0x33,
    0x0332, 0xe0,
    0x0333, 0x04,
    0x0308, 0x64,
    0x0311, 0x40,
    0x0002, 0x43,
    0x0318, 0x5e,
    0x02d3, 0x00,
    DELAY_FLAG, 0x32,
    0x02d3, 0x18,
    0x02d3, 0xe4,
    0x02d4, 0x67,
    0x02d5, 0x07,
    0x02d6, 0xe4,
    0x02d7, 0x68,
    0x02d8, 0x07,
};

static uint16_t single_max9296_imx390c_init_setting[] = {
    0x0001, 0x02,  // 6Gbps
    DELAY_FLAG, 0x64,
    0x0010, 0xf1,  // reset
    DELAY_FLAG, 0x32,
    0x1449, 0x75,  // Enable ErrChPwrUp, Enhance link stability
    0x1549, 0x75,
    0x0313, 0x00,  // CSI output disabled
    0x0314, 0x10,  // pipeX VC=0 pipeY VC=1
    0x0316, 0x1E,  // pipeline X DT=0x1E
    0x0319, 0x10,  // Datatypes = x22, x1E, x2E
    0x0320, 0x2C,  // MIPI CSI Port A 1200Mbps
    0x0323, 0x2C,  // MIPI CSI Port B 1200Mbps
    0x0332, 0x30,  // PHY0/1 standby, PHY2/3 not standby
    0x0330, 0x04,  // 2x4 mode
    0x0339, 0x80,  // PHY9 copy 0 destination 2: [0b10]
    0x033a, 0x42,  // PHY10 copy 0 destination 1: [0b0100 0010]
    0x0050, 0x02,  // Pipeline X -> Z
    0x0051, 0x02,  // Pipeline Y -> Z
    0x0325, 0x80,  // ignore first frame

    // gpio 0 is mapped to the peer gpio 7
    0x02b0, 0xeb,
    0x02b1, 0xa7,
    0x02b2, 0x07,
};

static uint8_t imx390c_max9295a_9296_dual_init_setting[] = {
    // Disable MAX9296A MIPI output, CSI_OUT_EN=0
    0x04, 0x90, 0x03, 0x13, 0x00,
    0x04, 0x90, 0x00, 0x01, 0x02,  // 6Gbps
    0x00, 0x32,
    0x04, 0x90, 0x14, 0x49, 0x75,  // Enable ErrChPwrUp, Enhance link stability
    0x04, 0x90, 0x15, 0x49, 0x75,

/* --------------LINK A () MAX9295A Settings---------------------- */
    0x04, 0x90, 0x00, 0x10, 0x01,
    0x04, 0x90, 0x00, 0x10, 0x21,
    0x00, 0x32,

    // set I2C addr
    0x04, 0x80, 0x00, 0x00, 0x82,
    0x04, 0x82, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x82, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x82, 0x00, 0x42, 0xa2,
    0x04, 0x82, 0x00, 0x43, 0x60,
    0x04, 0x82, 0x00, 0x44, 0xda,
    0x04, 0x82, 0x00, 0x45, 0x20,

    0x04, 0x82, 0x00, 0x6B, 0x16,
    0x04, 0x82, 0x00, 0x73, 0x17,
    0x04, 0x82, 0x00, 0x7B, 0x36,
    0x04, 0x82, 0x00, 0x83, 0x36,
    0x04, 0x82, 0x00, 0x93, 0x36,
    0x04, 0x82, 0x00, 0x9B, 0x36,
    0x04, 0x82, 0x00, 0xA3, 0x36,
    0x04, 0x82, 0x00, 0xAB, 0x36,
    0x04, 0x82, 0x00, 0x8B, 0x36,
    0x00, 0x32,

/* -------------LINK B () MAX9295A Settings------------------- */
    0x04, 0x90, 0x00, 0x10, 0x02,
    0x04, 0x90, 0x00, 0x10, 0x22,
    0x00, 0x5F,

    // set I2C addr
    0x04, 0x80, 0x00, 0x00, 0x84,
    0x04, 0x84, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x84, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x84, 0x00, 0x42, 0xa2,
    0x04, 0x84, 0x00, 0x43, 0x62,
    0x04, 0x84, 0x00, 0x44, 0xda,
    0x04, 0x84, 0x00, 0x45, 0x22,
    0x00, 0x32,

/* --------------Enable LINK A/LINK B------------------------ */
    0x04, 0x90, 0x00, 0x10, 0x23,
    0x00, 0x64,

    0x04, 0x82, 0x00, 0x02, 0x43,       // enable Video transmit Channel Z
    0x04, 0x82, 0x03, 0x30, 0x00,       // Set SER to 1x4 mode
    0x04, 0x82, 0x03, 0x31, 0x33,       // Set 4 Lanes for SER
    0x04, 0x82, 0x03, 0x32, 0xE0,       // Map mipi data lane PHY1_Lane1->D3,  Lane0->D2
    0x04, 0x82, 0x03, 0x33, 0x04,       // Map mipi data Lane PHY2_Lane1->D1; Lane0->D0
    0x04, 0x82, 0x03, 0x08, 0x64,       // Enable info lines: PORT B && Pipe Z
    0x04, 0x82, 0x03, 0x11, 0x40,       // Start video from Port B && Pipe Z
    0x04, 0x82, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x82, 0x02, 0xd3, 0x18,
    0x04, 0x82, 0x02, 0xd3, 0xe4,
    0x04, 0x82, 0x02, 0xd4, 0x67,
    0x04, 0x82, 0x02, 0xd5, 0x07,
    0x04, 0x82, 0x02, 0xd6, 0xe4,
    0x04, 0x82, 0x02, 0xd7, 0x68,
    0x04, 0x82, 0x02, 0xd8, 0x07,

    // Set 9295A pipe Z stream ID
    0x04, 0x82, 0x03, 0x18, 0x5E,       // Pipe_Z YUV422
    0x04, 0x82, 0x00, 0x5B, 0x12,       // pipe Z ID =2; 9295A pipeZ(2)

    0x04, 0x84, 0x00, 0x02, 0x23,       // enable Video transmit Channel Y
    0x04, 0x84, 0x03, 0x30, 0x00,       // Set SER to 1x4 mode
    0x04, 0x84, 0x03, 0x31, 0x33,       // Set 4 Lanes for SER
    0x04, 0x84, 0x03, 0x32, 0xE0,       // Map mipi data lane PHY1_Lane1->D3,  Lane0->D2
    0x04, 0x84, 0x03, 0x33, 0x04,       // Map mipi data Lane PHY2_Lane1->D1; Lane0->D0
    0x04, 0x84, 0x03, 0x08, 0x62,       // Enable info lines: PORT B && Pipe Y
    0x04, 0x84, 0x03, 0x11, 0x20,       // Start video from Port B && Pipe Y
    0x04, 0x84, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x84, 0x02, 0xd3, 0x18,
    0x04, 0x84, 0x02, 0xd3, 0xe4,
    0x04, 0x84, 0x02, 0xd4, 0x67,
    0x04, 0x84, 0x02, 0xd5, 0x07,
    0x04, 0x84, 0x02, 0xd6, 0xe4,
    0x04, 0x84, 0x02, 0xd7, 0x68,
    0x04, 0x84, 0x02, 0xd8, 0x07,

    // Set 9295A pipe Y stream ID
    0x04, 0x84, 0x03, 0x16, 0x5E,       // Pipe_Y YUV422
    0x04, 0x84, 0x00, 0x57, 0x11,       // Pipe Y ID = 1

/* ------------------ MAX9296 Settings ----------------------- */
    0x04, 0x90, 0x03, 0x30, 0x04,       // 2x4 mode
    // Software override for BPP, VC and DT
    0x04, 0x90, 0x03, 0x16, 0x5E,      // [7:6]: for pipeY data type [0101 0000]
    0x04, 0x90, 0x03, 0x17, 0x7E,      // [7:4]: for pipeZ data type [3:0] for pipeY [0111 1110]
    0x04, 0x90, 0x03, 0x18, 0x02,      // [1:0]: for pipeZ data type [0000 0010]
    0x04, 0x90, 0x03, 0x19, 0x90,      // [4:0]: 0x10 of 0x1E 0x22 0x2E for pipeY [7:5] for pipeZ [1001 0000]
    0x04, 0x90, 0x03, 0x1A, 0x00,      // [1:0]: for low bits of pipeZ
    0x04, 0x90, 0x03, 0x14, 0x11,      // pipeY VC=1
    0x04, 0x90, 0x03, 0x15, 0x00,      // pipeZ VC=0

    0x04, 0x90, 0x04, 0x4A, 0xD0,      // Set the lane count as 4 lanes port A
    0x04, 0x90, 0x04, 0x8A, 0xD0,      // Set the lane count as 4 lanes port B
    0x04, 0x90, 0x03, 0x20, 0x2C,      // Set MIPI speed 1200Mbps, PHY1 soft override
    0x04, 0x90, 0x03, 0x23, 0x2C,      // Set MIPI speed 1200Mbps, PHY1 soft override
    0x04, 0x90, 0x03, 0x25, 0x80,      // ignore first frame
    0x04, 0x90, 0x03, 0x32, 0x30,      // PHY0/1 standby, PHY2/3 not standby

    // Send YUV422, FS, and FE from Pipe Y to Controller 1
    0x04, 0x90, 0x04, 0x4B, 0x07,     // Enable 3 Mappings
    0x04, 0x90, 0x04, 0x6D, 0x15,     // Destionation Controller = Controller 1.
                                      // Controller 1 sends data to MIPI Port A

    /* MIPI_TX1 for pipeX configuration */
    // For the following MSB 2 bits = VC, LSB 6 bits =DT
    0x04, 0x90, 0x04, 0x4D, 0x1E,     // SRC  0b00011110, DT = 0x1E VC=0
    0x04, 0x90, 0x04, 0x4E, 0x5E,     // DEST 0b01011110, DT = 0x1E VC=1
    0x04, 0x90, 0x04, 0x4F, 0x00,     // SRC  DT = Frame Start
    0x04, 0x90, 0x04, 0x50, 0x40,     // DEST DT = Frame Start
    0x04, 0x90, 0x04, 0x51, 0x01,     // SRC  DT = Frame End
    0x04, 0x90, 0x04, 0x52, 0x41,     // DEST DT = Frame End

    // Send YUV422, FS, and FE from Pipe Z to Controller 1
    0x04, 0x90, 0x04, 0x8B, 0x07,     // Enable 3 Mappings
    0x04, 0x90, 0x04, 0xAD, 0x15,     // Destionation Controller = Controller 1.
                                      // Controller 2 sends data to MIPI Port A

    /* MIPI_TX2 for pipeZ configuration */
    // For the following MSB 2 bits = VC, LSB 6 bits = DT
    0x04, 0x90, 0x04, 0x8D, 0x1E,     // SRC  0b00011110, DT = 0x1E VC=0
    0x04, 0x90, 0x04, 0x8E, 0x1E,     // DEST 0b00011110, DT = 0x1E
    0x04, 0x90, 0x04, 0x8F, 0x00,     // SRC  DT = Frame Start
    0x04, 0x90, 0x04, 0x90, 0x00,     // DEST DT = Frame Start
    0x04, 0x90, 0x04, 0x91, 0x01,     // SRC  DT = Frame End
    0x04, 0x90, 0x04, 0x92, 0x01,     // DEST DT = Frame End
    0x04, 0x90, 0x00, 0x51, 0x01,     // 9296 pipeY (ID1), map to pipeY
    0x04, 0x90, 0x00, 0x52, 0x02,     // 9296 pipeZ (ID2), map to pipeZ
};

static uint8_t imx390c_max9295_port_a_init_setting[] = {
    0x04, 0x52, 0x00, 0x06, 0xf1,
    0x00, 0x32,
    0x04, 0x80, 0x00, 0x00, 0x82,
    0x04, 0x82, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x82, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x82, 0x00, 0x42, 0xa2,
    0x04, 0x82, 0x00, 0x43, 0x60,
    0x04, 0x82, 0x00, 0x44, 0xda,
    0x04, 0x82, 0x00, 0x45, 0x20,
    0x04, 0x52, 0x00, 0x06, 0xff,
    0x00, 0x32,
    0x04, 0x82, 0x03, 0x30, 0x00,
    0x04, 0x82, 0x03, 0x31, 0x33,
    0x04, 0x82, 0x03, 0x32, 0xe0,
    0x04, 0x82, 0x03, 0x33, 0x04,
    0x04, 0x82, 0x03, 0x08, 0x64,
    0x04, 0x82, 0x03, 0x11, 0x40,
    0x04, 0x82, 0x00, 0x02, 0x43,
    0x04, 0x82, 0x03, 0x18, 0x5e,
    0x04, 0x82, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x82, 0x02, 0xd3, 0x18,
    0x04, 0x82, 0x02, 0xd3, 0xe4,
    0x04, 0x82, 0x02, 0xd4, 0x67,
    0x04, 0x82, 0x02, 0xd5, 0x07,
    0x04, 0x82, 0x02, 0xd6, 0xe4,
    0x04, 0x82, 0x02, 0xd7, 0x68,
    0x04, 0x82, 0x02, 0xd8, 0x07,
};

static uint8_t imx390c_max9295_port_b_init_setting[] = {
    0x04, 0x52, 0x00, 0x06, 0xf2,
    0x00, 0x32,
    0x04, 0x80, 0x00, 0x00, 0x84,
    0x04, 0x84, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x84, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x84, 0x00, 0x42, 0xa2,
    0x04, 0x84, 0x00, 0x43, 0x62,
    0x04, 0x84, 0x00, 0x44, 0xda,
    0x04, 0x84, 0x00, 0x45, 0x22,
    0x04, 0x52, 0x00, 0x06, 0xff,
    0x00, 0x32,
    0x04, 0x84, 0x03, 0x30, 0x00,
    0x04, 0x84, 0x03, 0x31, 0x33,
    0x04, 0x84, 0x03, 0x32, 0xe0,
    0x04, 0x84, 0x03, 0x33, 0x04,
    0x04, 0x84, 0x03, 0x08, 0x64,
    0x04, 0x84, 0x03, 0x11, 0x40,
    0x04, 0x84, 0x00, 0x02, 0x43,
    0x04, 0x84, 0x03, 0x18, 0x5e,
    0x04, 0x84, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x84, 0x02, 0xd3, 0x18,
    0x04, 0x84, 0x02, 0xd3, 0xe4,
    0x04, 0x84, 0x02, 0xd4, 0x67,
    0x04, 0x84, 0x02, 0xd5, 0x07,
    0x04, 0x84, 0x02, 0xd6, 0xe4,
    0x04, 0x84, 0x02, 0xd7, 0x68,
    0x04, 0x84, 0x02, 0xd8, 0x07,
};

static uint8_t imx390c_max9295_port_c_init_setting[] = {
    0x04, 0x52, 0x00, 0x06, 0xf4,
    0x00, 0x32,
    0x04, 0x80, 0x00, 0x00, 0x86,
    0x04, 0x86, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x86, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x86, 0x00, 0x42, 0xa2,
    0x04, 0x86, 0x00, 0x43, 0x64,
    0x04, 0x86, 0x00, 0x44, 0xda,
    0x04, 0x86, 0x00, 0x45, 0x24,
    0x04, 0x52, 0x00, 0x06, 0xff,
    0x00, 0x32,
    0x04, 0x86, 0x03, 0x30, 0x00,
    0x04, 0x86, 0x03, 0x31, 0x33,
    0x04, 0x86, 0x03, 0x32, 0xe0,
    0x04, 0x86, 0x03, 0x33, 0x04,
    0x04, 0x86, 0x03, 0x08, 0x64,
    0x04, 0x86, 0x03, 0x11, 0x40,
    0x04, 0x86, 0x00, 0x02, 0x43,
    0x04, 0x86, 0x03, 0x18, 0x5e,
    0x04, 0x86, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x86, 0x02, 0xd3, 0x18,
    0x04, 0x86, 0x02, 0xd3, 0xe4,
    0x04, 0x86, 0x02, 0xd4, 0x67,
    0x04, 0x86, 0x02, 0xd5, 0x07,
    0x04, 0x86, 0x02, 0xd6, 0xe4,
    0x04, 0x86, 0x02, 0xd7, 0x68,
    0x04, 0x86, 0x02, 0xd8, 0x07,
};

static uint8_t imx390c_max9295_port_d_init_setting[] = {
    0x04, 0x52, 0x00, 0x06, 0xf8,
    0x00, 0x32,
    0x04, 0x80, 0x00, 0x00, 0x88,
    0x04, 0x88, 0x02, 0xbe, 0x00,
    0x00, 0x32,
    0x04, 0x88, 0x02, 0xbe, 0x18,
    0x00, 0xff,
    0x00, 0xff,
    0x04, 0x88, 0x00, 0x42, 0xa2,
    0x04, 0x88, 0x00, 0x43, 0x66,
    0x04, 0x88, 0x00, 0x44, 0xda,
    0x04, 0x88, 0x00, 0x45, 0x26,
    0x04, 0x52, 0x00, 0x06, 0xff,
    0x00, 0x32,
    0x04, 0x88, 0x03, 0x30, 0x00,
    0x04, 0x88, 0x03, 0x31, 0x33,
    0x04, 0x88, 0x03, 0x32, 0xe0,
    0x04, 0x88, 0x03, 0x33, 0x04,
    0x04, 0x88, 0x03, 0x08, 0x64,
    0x04, 0x88, 0x03, 0x11, 0x40,
    0x04, 0x88, 0x00, 0x02, 0x43,
    0x04, 0x88, 0x03, 0x18, 0x5e,
    0x04, 0x88, 0x02, 0xd3, 0x00,
    0x00, 0x32,
    0x04, 0x88, 0x02, 0xd3, 0x18,
    0x04, 0x88, 0x02, 0xd3, 0xe4,
    0x04, 0x88, 0x02, 0xd4, 0x67,
    0x04, 0x88, 0x02, 0xd5, 0x07,
    0x04, 0x88, 0x02, 0xd6, 0xe4,
    0x04, 0x88, 0x02, 0xd7, 0x68,
    0x04, 0x88, 0x02, 0xd8, 0x07,
};

static uint8_t imx390c_max96712_init_setting[] = {
    0x04, 0x52, 0x00, 0x18, 0x0F,
    0x00, 0x64,
    0x04, 0x52, 0x14, 0x49, 0x75,  // Enable ErrChPwrUp, Enhance link stability
    0x04, 0x52, 0x15, 0x49, 0x75,
    0x04, 0x52, 0x16, 0x49, 0x75,
    0x04, 0x52, 0x17, 0x49, 0x75,

    0x04, 0x52, 0x04, 0x0B, 0x00,
    0x00, 0x32,
    0x04, 0x52, 0x00, 0xf0, 0x62,
    0x04, 0x52, 0x00, 0xf1, 0xea,
    0x04, 0x52, 0x00, 0xf4, 0x0f,

    0x04, 0x52, 0x09, 0x0b, 0x07,
    0x04, 0x52, 0x09, 0x2d, 0x15,
    0x04, 0x52, 0x09, 0x0d, 0x1e,
    0x04, 0x52, 0x09, 0x0e, 0x1e,
    0x04, 0x52, 0x09, 0x0f, 0x00,
    0x04, 0x52, 0x09, 0x10, 0x00,
    0x04, 0x52, 0x09, 0x11, 0x01,
    0x04, 0x52, 0x09, 0x12, 0x01,

    0x04, 0x52, 0x09, 0x4B, 0x07,
    0x04, 0x52, 0x09, 0x6D, 0x15,
    0x04, 0x52, 0x09, 0x4D, 0x1e,
    0x04, 0x52, 0x09, 0x4E, 0x5e,
    0x04, 0x52, 0x09, 0x4F, 0x00,
    0x04, 0x52, 0x09, 0x50, 0x40,
    0x04, 0x52, 0x09, 0x51, 0x01,
    0x04, 0x52, 0x09, 0x52, 0x41,

    0x04, 0x52, 0x09, 0x8B, 0x07,
    0x04, 0x52, 0x09, 0xAD, 0x15,
    0x04, 0x52, 0x09, 0x8D, 0x1e,
    0x04, 0x52, 0x09, 0x8E, 0x9e,
    0x04, 0x52, 0x09, 0x8F, 0x00,
    0x04, 0x52, 0x09, 0x90, 0x80,
    0x04, 0x52, 0x09, 0x91, 0x01,
    0x04, 0x52, 0x09, 0x92, 0x81,

    0x04, 0x52, 0x09, 0xCB, 0x07,
    0x04, 0x52, 0x09, 0xED, 0x15,
    0x04, 0x52, 0x09, 0xCD, 0x1E,
    0x04, 0x52, 0x09, 0xCE, 0xde,
    0x04, 0x52, 0x09, 0xCF, 0x00,
    0x04, 0x52, 0x09, 0xD0, 0xc0,
    0x04, 0x52, 0x09, 0xD1, 0x01,
    0x04, 0x52, 0x09, 0xD2, 0xc1,

    0x04, 0x52, 0x08, 0xa0, 0x04,
    0x04, 0x52, 0x08, 0xa3, 0xe4,
    0x04, 0x52, 0x08, 0xa4, 0xe4,
    0x04, 0x52, 0x09, 0x0A, 0xc0,
    0x04, 0x52, 0x09, 0x4A, 0xc0,
    0x04, 0x52, 0x09, 0x8A, 0xc0,
    0x04, 0x52, 0x09, 0xCA, 0xc0,
    0x04, 0x52, 0x04, 0x15, 0x2C,
    0x04, 0x52, 0x04, 0x18, 0x2C,
    0x04, 0x52, 0x04, 0x1b, 0x2C,
    0x04, 0x52, 0x04, 0x1e, 0x2C,
    0x04, 0x52, 0x08, 0xa2, 0xf4,

    0x04, 0x52, 0x03, 0x1D, 0xa7,
    0x04, 0x52, 0x03, 0x1E, 0x07,
    0x04, 0x52, 0x03, 0x1C, 0xeb,
    0x04, 0x52, 0x03, 0x54, 0xe7,
    0x04, 0x52, 0x03, 0x55, 0x07,
    0x04, 0x52, 0x03, 0x8A, 0xe7,
    0x04, 0x52, 0x03, 0x8B, 0x07,
    0x04, 0x52, 0x03, 0xC1, 0xe7,
    0x04, 0x52, 0x03, 0xC2, 0x07,
};

static uint16_t max9296_imx390c_stream_on[] = {
    0x313, 0x42,  // OPEN MIPI
};

static uint16_t max9296_imx390c_stream_off[] = {
    0x313, 0x00,  // CLOSE MIPI
};

static uint16_t max96712_imx390c_stream_on[] = {
    0x040B, 0x62,  // OPEN MIPI
};

static uint16_t max96712_imx390c_stream_off[] = {
    0x040B, 0x00,  // CLOSE MIPI
};

#endif  // UTILITY_SENSOR_INC_IMX390C_SETTING_H_
