/***************************************************************************
* COPYRIGHT NOTICE
* Copyright 2019 Horizon Robotics, Inc.
* All rights reserved.
***************************************************************************/
#ifndef UTILITY_SENSOR_INC_OS8A10_SETTING_H_
#define UTILITY_SENSOR_INC_OS8A10_SETTING_H_

#ifdef __cplusplus
extern "C" {
#endif

#define OS8A10_VAMX				(0x380e)
#define OS8A10_HAMX				(0x380c)
#define OS8A10_GAIN				(0x3508)
#define OS8A10_DGAIN			(0x350a)
#define OS8A10_HDR_DGAIN        (0x350e)
#define OS8A10_X_OUTPUT_SIZE	(0x3808)
#define OS8A10_Y_OUTPUT_SIZE	(0x380a)

#define OS8A10_SHS1             (0x3501)
#define OS8A10_SHS2             (0x3511)
#define OS8A10_SYSCLKMHZ		(144000000)
#define S2160P			(0)
#define S1520P			(8)
#define S1080P			(16)

static uint32_t os8a10_again_lut[] = {
	0x80,
	0x83,
	0x86,
	0x89,
	0x8C,
	0x8F,
	0x92,
	0x95,
	0x99,
	0x9C,
	0x9F,
	0xA3,
	0xA6,
	0xAA,
	0xAE,
	0xB2,
	0xB6,
	0xB9,
	0xBE,
	0xC2,
	0xC6,
	0xCA,
	0xCF,
	0xD3,
	0xD8,
	0xDC,
	0xE1,
	0xE6,
	0xEB,
	0xF0,
	0xF6,
	0xFB,
	0x100,
	0x106,
	0x10C,
	0x112,
	0x118,
	0x11E,
	0x124,
	0x12A,
	0x131,
	0x138,
	0x13E,
	0x145,
	0x14C,
	0x154,
	0x15B,
	0x163,
	0x16B,
	0x172,
	0x17B,
	0x183,
	0x18B,
	0x194,
	0x19D,
	0x1A6,
	0x1AF,
	0x1B8,
	0x1C2,
	0x1CC,
	0x1D6,
	0x1E0,
	0x1EB,
	0x1F6,
	0x200,
	0x20C,
	0x217,
	0x223,
	0x22F,
	0x23B,
	0x248,
	0x254,
	0x261,
	0x26F,
	0x27C,
	0x28A,
	0x298,
	0x2A7,
	0x2B6,
	0x2C5,
	0x2D5,
	0x2E4,
	0x2F5,
	0x305,
	0x316,
	0x327,
	0x339,
	0x34B,
	0x35E,
	0x370,
	0x384,
	0x397,
	0x3AC,
	0x3C0,
	0x3D5,
	0x3EB,
	0x400,
	0x417,
	0x42E,
	0x445,
	0x45D,
	0x476,
	0x48F,
	0x4A8,
	0x4C2,
	0x4DD,
	0x4F8,
	0x514,
	0x530,
	0x54E,
	0x56B,
	0x58A,
	0x5A9,
	0x5C8,
	0x5E9,
	0x60A,
	0x62C,
	0x64E,
	0x672,
	0x696,
	0x6BB,
	0x6E0,
	0x707,
	0x72E,
	0x757,
	0x780,
	0x7AA,
	0x7C0,
};

static uint32_t os8a10_dgain_lut[] = {
	0x400,
	0x417,
	0x42E,
	0x445,
	0x45D,
	0x476,
	0x48F,
	0x4A8,
	0x4C2,
	0x4DD,
	0x4F8,
	0x514,
	0x530,
	0x54E,
	0x56B,
	0x58A,
	0x5A9,
	0x5C8,
	0x5E9,
	0x60A,
	0x62C,
	0x64E,
	0x672,
	0x696,
	0x6BB,
	0x6E0,
	0x707,
	0x72E,
	0x757,
	0x780,
	0x7AA,
	0x7D5,
	0x800,
	0x82D,
	0x85B,
	0x88A,
	0x8BA,
	0x8EB,
	0x91D,
	0x950,
	0x984,
	0x9B9,
	0x9F0,
	0xA28,
	0xA60,
	0xA9B,
	0xAD6,
	0xB13,
	0xB51,
	0xB90,
	0xBD1,
	0xC13,
	0xC57,
	0xC9C,
	0xCE3,
	0xD2B,
	0xD75,
	0xDC0,
	0xE0D,
	0xE5C,
	0xEAD,
	0xEFF,
	0xF53,
	0xFA9,
	0x1000,
	0x105A,
	0x10B6,
	0x1114,
	0x1173,
	0x11D5,
	0x1239,
	0x129F,
	0x1307,
	0x1372,
	0x13DF,
	0x144F,
	0x14C0,
	0x1535,
	0x15AC,
	0x1625,
	0x16A1,
	0x1720,
	0x17A2,
	0x1826,
	0x18AD,
	0x1938,
	0x19C5,
	0x1A56,
	0x1AE9,
	0x1B80,
	0x1C1A,
	0x1CB8,
	0x1D59,
	0x1DFD,
	0x1EA5,
	0x1F51,
	0x2000,
	0x20B4,
	0x216B,
	0x2227,
	0x22E6,
	0x23AA,
	0x2471,
	0x253E,
	0x260E,
	0x26E4,
	0x27BE,
	0x289D,
	0x2980,
	0x2A69,
	0x2B57,
	0x2C49,
	0x2D42,
	0x2E3F,
	0x2F43,
	0x304C,
	0x315A,
	0x326F,
	0x338A,
	0x34AB,
	0x35D2,
	0x36FF,
	0x3834,
	0x396F,
	0x3AB1,
	0x3BFA,
	0x3D4A,
};

static uint32_t os8a10_stream_on_setting[] = {
	0x0100, 0x01
};

static uint32_t os8a10_stream_off_setting[] = {
	0x0100, 0x00
};

typedef enum OS8A10_FPS_TYPE
{
	OS8A10_5FPS = 5,
	OS8A10_25FPS = 25,
	OS8A10_30FPS = 30
} SEN_FPS_TYPE_E;

static uint32_t os8a10_5fps_normal_setting[] = {
	//  2160p
	0x380c, 0x30,
	0x380d, 0x90,
	0x380e, 0x09,
	0x380f, 0x0a,
	//  1520p
	0x380c, 0x30,
	0x380d, 0x90,
	0x380e, 0x09,
	0x380f, 0x0a,
};

static uint32_t os8a10_25fps_normal_setting[] = {
	//  2160p
	0x380c, 0x09,
	0x380d, 0xb6,
	0x380e, 0x09,
	0x380f, 0x0a,
	//  1520p
	0x380c, 0x09,
	0x380d, 0xb6,
	0x380e, 0x09,
	0x380f, 0x0a,
};

static uint32_t os8a10_30fps_normal_setting[] = {
	//  2160p
	0x380c, 0x08,
	0x380d, 0x18,
	0x380e, 0x09,
	0x380f, 0x0a,
	//  1520p
	0x380c, 0x08,
	0x380d, 0x18,
	0x380e, 0x09,
	0x380f, 0x0a,
};

static uint32_t os8a10_25fps_hdr_setting[] = {
	//  2160p
	0x380c, 0x04,
	0x380d, 0xdc,
	0x380e, 0x09,
	0x380f, 0x0a,
	//  1520p
	0x380c, 0x04,
	0x380d, 0x0c,
	0x380e, 0x0a,
	0x380f, 0xd8,
};

static uint32_t os8a10_30fps_hdr_setting[] = {
	//  2160p
	0x380c, 0x04,
	0x380d, 0x0c,
	0x380e, 0x09,
	0x380f, 0x0a,
	//  1520p
	0x380c, 0x04,
	0x380d, 0x0c,
	0x380e, 0x09,
	0x380f, 0x0a,
};

static uint32_t os8a10_2160p_raw10_normal_setting[] = {
	//  3840X2160 4lane MIPI1440Mbps Linear10 25fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x5a,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x3400, 0x04,
	0x3025, 0x03,
	0x3425, 0x01,
	0x3428, 0x01,
	0x3406, 0x08,
	0x3408, 0x03,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x08,
	0x3502, 0xe5,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x00,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x43,
	0x3661, 0x06,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x21,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x0f,
	0x3809, 0x00,
	0x380a, 0x08,
	0x380b, 0x70,
	0x380c, 0x09,  //  08 ;04
	0x380d, 0xb6,  //  18 ;0c
	0x380e, 0x09,
	0x380f, 0x0a,
	0x3813, 0x10,
	0x3814, 0x01,
	0x3815, 0x01,
	0x3816, 0x01,
	0x3817, 0x01,
	0x381c, 0x00,
	0x3820, 0x04,
	0x3821, 0x00,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x00,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x0d,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x90,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x0b,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x03,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x09,
	0x3502, 0x01,
};

static uint32_t os8a10_2160p_raw10_dol2_setting[] = {
	//  3840X2160 4lane MIPI1440Mbps HDRVC10 25fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x5a,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x08,
	0x3502, 0xe5,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x00,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x42,
	0x3661, 0x07,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x21,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x0f,
	0x3809, 0x00,
	0x380a, 0x08,
	0x380b, 0x70,
	0x380c, 0x04,
	0x380d, 0xdb,  //  0c
	0x380e, 0x09,
	0x380f, 0x0a,
	0x3813, 0x10,
	0x3814, 0x01,
	0x3815, 0x01,
	0x3816, 0x01,
	0x3817, 0x01,
	0x381c, 0x08,
	0x3820, 0x04,
	0x3821, 0x20,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x01,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x0d,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x98,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x0b,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x07,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x08,
	0x3502, 0xe1,
	0x3511, 0x00,
	0x3512, 0x20,
	0x3833, 0x01,
};


static uint32_t os8a10_1520p_raw10_normal_setting[] = {
	//  2688X11520 4lane MIPI1440Mbps Linear10 25fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x5a,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x3400, 0x04,
	0x3025, 0x03,
	0x3425, 0x01,
	0x3428, 0x01,
	0x3406, 0x08,
	0x3408, 0x03,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x08,
	0x3502, 0xe5,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x00,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x43,
	0x3661, 0x06,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x21,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x0a,  //  0x0f
	0x3809, 0x80,
	0x380a, 0x05,  //  0x08
	0x380b, 0xf0,  //  0x70
	0x380c, 0x09,  //  0x08 ;04
	0x380d, 0xb6,  //  0x18 ;0c
	0x380e, 0x09,
	0x380f, 0x0a,
	0x3813, 0x10,
	0x3814, 0x01,
	0x3815, 0x01,
	0x3816, 0x01,
	0x3817, 0x01,
	0x381c, 0x00,
	0x3820, 0x04,
	0x3821, 0x00,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x00,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x0d,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x90,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x0b,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x03,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x09,
	0x3502, 0x01,
};

static uint32_t os8a10_1520p_raw10_dol2_setting[] = {
	// 2688X1520 4lane MIPI1440Mbps HDRVC10 25fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x5a,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x08,
	0x3502, 0xe5,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x00,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x42,
	0x3661, 0x07,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x21,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x0a,
	0x3809, 0x80,
	0x380a, 0x05,
	0x380b, 0xf0,
	0x380c, 0x04,
	0x380d, 0x0c,
	0x380e, 0x0a,  //  09
	0x380f, 0xd8,  //  0a
	0x3813, 0x04,  //  10
	0x3814, 0x01,
	0x3815, 0x01,
	0x3816, 0x01,
	0x3817, 0x01,
	0x381c, 0x08,
	0x3820, 0x04,
	0x3821, 0x20,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x01,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x0d,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x98,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x0b,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x07,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x08,
	0x3502, 0xe1,
	0x3511, 0x00,
	0x3512, 0x20,
	0x3833, 0x01,
};


static uint32_t os8a10_extra_hts_vts_setting[] = {
	0x380c, 0x00,
	0x380d, 0x00,
	0x380e, 0x00,
	0x380f, 0x00,
};

static uint32_t os8a10_2160p_raw10_1fps_setting[] = {
	//  3840X2160 4lane MIPI800Mbps Linear10 1fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x32,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x3400, 0x04,
	0x3025, 0x03,
	0x3425, 0x01,
	0x3428, 0x01,
	0x3406, 0x08,
	0x3408, 0x03,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x08,
	0x3502, 0xe5,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x00,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x43,
	0x3661, 0x06,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x21,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x0f,
	0x3809, 0x00,
	0x380a, 0x08,
	0x380b, 0x70,
	0x3813, 0x10,
	0x3814, 0x01,
	0x3815, 0x01,
	0x3816, 0x01,
	0x3817, 0x01,
	0x381c, 0x00,
	0x3820, 0x00,
	0x3821, 0x04,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x00,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x0d,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x90,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x14,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x03,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x380c, 0xbb,
	0x380d, 0x80,
	0x380e, 0x0b,
	0x380f, 0xb8,
	0x3501, 0x0a,
	0x3502, 0x4e,
};

static uint32_t os8a10_1080p_raw10_5fps_dol2_setting[] = {
	// 1920X1080 4lane MIPI1440Mbps HDRVC10 5fps MCLK24M,
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x32,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x04,
	0x3502, 0x62,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x11,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x42,
	0x3661, 0x07,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x22,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x07,
	0x3809, 0x80,
	0x380a, 0x04,
	0x380b, 0x38,
	0x380c, 0x2e,
	0x380d, 0xe0,
	0x380e, 0x04,
	0x380f, 0xb0,
	0x3813, 0x08,
	0x3814, 0x02,
	0x3815, 0x02,
	0x3816, 0x02,
	0x3817, 0x02,
	0x381c, 0x08,
	0x3820, 0x02,
	0x3821, 0x26,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x01,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x05,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x98,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x14,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x07,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x04,
	0x3502, 0x5d,
	0x3511, 0x00,
	0x3512, 0x20,
	0x3833, 0x01,
};

static uint32_t os8a10_1080p_raw12_15fps_dol2_setting[] = {
	//  1920x1080 4lane MIPI800Mbps Linear10 15fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x32,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x04,
	0x3502, 0x62,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x11,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x42,
	0x3661, 0x07,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x22,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x07,
	0x3809, 0x80,
	0x380a, 0x04,
	0x380b, 0x38,
	0x380c, 0x08,
	0x380d, 0x18,
	0x380e, 0x04,
	0x380f, 0x86,
	0x3813, 0x08,
	0x3814, 0x02,
	0x3815, 0x02,
	0x3816, 0x02,
	0x3817, 0x02,
	0x381c, 0x08,
	0x3820, 0x02,
	0x3821, 0x26,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x01,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x05,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x18,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x98,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x14,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x07,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	0x3501, 0x04,
	0x3502, 0x5d,
	0x3511, 0x00,
	0x3512, 0x20,
	0x3833, 0x01,
	// @@ 12 bit out
	0x031e, 0x0a,    // MIPI bit10, 12
	0x3609, 0xdb,
	0x3660, 0xd3,    // raw10, 12 mode
	0x3706, 0x6a,
	0x370a, 0x01,
	0x370b, 0x30,
	0x3709, 0x48,
	0x380c, 0x10,
	0x380d, 0x30,
};

static uint32_t os8a10_1080p_raw12_30fps_setting[] = {
	//  1920x1080 4lane MIPI800Mbps Linear10 30fps MCLK24M
	0x0100, 0x00,
	0x0103, 0x01,
	0x0303, 0x01,
	0x0305, 0x32,
	0x0306, 0x00,
	0x0308, 0x03,
	0x0309, 0x04,
	0x032a, 0x00,
	0x300f, 0x11,
	0x3010, 0x01,
	0x3011, 0x04,
	0x3012, 0x41,
	0x3016, 0xf0,
	0x301e, 0x98,
	0x3031, 0xa9,
	0x3103, 0x92,
	0x3104, 0x01,
	0x3106, 0x10,
	0x3400, 0x04,
	0x3025, 0x03,
	0x3425, 0x01,
	0x3428, 0x01,
	0x3406, 0x08,
	0x3408, 0x03,
	0x340c, 0xff,
	0x340d, 0xff,
	0x031e, 0x09,
	0x3501, 0x04,
	0x3502, 0x62,
	0x3505, 0x83,
	0x3508, 0x00,
	0x3509, 0x80,
	0x350a, 0x04,
	0x350b, 0x00,
	0x350c, 0x00,
	0x350d, 0x80,
	0x350e, 0x04,
	0x350f, 0x00,
	0x3600, 0x09,
	0x3603, 0x2c,
	0x3605, 0x50,
	0x3609, 0xb5,
	0x3610, 0x39,
	0x360c, 0x01,
	0x3628, 0xa4,
	0x362d, 0x10,
	0x3660, 0x43,
	0x3661, 0x06,
	0x3662, 0x00,
	0x3663, 0x28,
	0x3664, 0x0d,
	0x366a, 0x38,
	0x366b, 0xa0,
	0x366d, 0x00,
	0x366e, 0x00,
	0x3680, 0x00,
	0x36c0, 0x00,
	0x3701, 0x02,
	0x373b, 0x02,
	0x373c, 0x02,
	0x3736, 0x02,
	0x3737, 0x02,
	0x3705, 0x00,
	0x3706, 0x39,
	0x370a, 0x00,
	0x370b, 0x98,
	0x3709, 0x49,
	0x3714, 0x22,
	0x371c, 0x00,
	0x371d, 0x08,
	0x3740, 0x1b,
	0x3741, 0x04,
	0x375e, 0x0b,
	0x3760, 0x10,
	0x3776, 0x10,
	0x3781, 0x02,
	0x3782, 0x04,
	0x3783, 0x02,
	0x3784, 0x08,
	0x3785, 0x08,
	0x3788, 0x01,
	0x3789, 0x01,
	0x3797, 0x04,
	0x3762, 0x11,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x0c,
	0x3804, 0x0e,
	0x3805, 0xff,
	0x3806, 0x08,
	0x3807, 0x6f,
	0x3808, 0x07,
	0x3809, 0x80,
	0x380a, 0x04,
	0x380b, 0x38,
	0x380c, 0x04,
	0x380d, 0x0c,
	0x380e, 0x09,
	0x380f, 0x0c,
	0x3813, 0x08,
	0x3814, 0x03,
	0x3815, 0x01,
	0x3816, 0x03,
	0x3817, 0x01,
	0x381c, 0x00,
	0x3820, 0x01,
	0x3821, 0x05,
	0x3823, 0x08,
	0x3826, 0x00,
	0x3827, 0x08,
	0x382d, 0x08,
	0x3832, 0x02,
	0x3833, 0x00,
	0x383c, 0x48,
	0x383d, 0xff,
	0x3d85, 0x0b,
	0x3d84, 0x40,
	0x3d8c, 0x63,
	0x3d8d, 0xd7,
	0x4000, 0xf8,
	0x4001, 0x2b,
	0x4004, 0x00,
	0x4005, 0x40,
	0x400a, 0x01,
	0x400f, 0xa0,
	0x4010, 0x12,
	0x4018, 0x00,
	0x4008, 0x02,
	0x4009, 0x05,
	0x401a, 0x58,
	0x4050, 0x00,
	0x4051, 0x01,
	0x4028, 0x2f,
	0x4052, 0x00,
	0x4053, 0x80,
	0x4054, 0x00,
	0x4055, 0x80,
	0x4056, 0x00,
	0x4057, 0x80,
	0x4058, 0x00,
	0x4059, 0x80,
	0x430b, 0xff,
	0x430c, 0xff,
	0x430d, 0x00,
	0x430e, 0x00,
	0x4501, 0x98,
	0x4502, 0x00,
	0x4643, 0x00,
	0x4640, 0x01,
	0x4641, 0x04,
	0x4800, 0x64,
	0x4809, 0x2b,
	0x4813, 0x90,
	0x4817, 0x04,
	0x4833, 0x18,
	0x4837, 0x14,
	0x483b, 0x00,
	0x484b, 0x03,
	0x4850, 0x7c,
	0x4852, 0x06,
	0x4856, 0x58,
	0x4857, 0xaa,
	0x4862, 0x0a,
	0x4869, 0x18,
	0x486a, 0xaa,
	0x486e, 0x03,
	0x486f, 0x55,
	0x4875, 0xf0,
	0x5000, 0x89,
	0x5001, 0x42,
	0x5004, 0x40,
	0x5005, 0x00,
	0x5180, 0x00,
	0x5181, 0x10,
	0x580b, 0x03,
	0x4d00, 0x03,
	0x4d01, 0xc9,
	0x4d02, 0xbc,
	0x4d03, 0xc6,
	0x4d04, 0x4a,
	0x4d05, 0x25,
	0x4700, 0x2b,
	0x4e00, 0x2b,
	// @@ 12 bit out
	0x031e, 0x0a,    // MIPI bit10, 12
	0x3609, 0xdb,
	0x3660, 0xd3,    // raw10, 12 mode
	0x3706, 0x6a,
	0x370a, 0x01,
	0x370b, 0x30,
	0x3709, 0x48,
	0x380c, 0x10,
	0x380d, 0x30,
};

#ifdef __cplusplus
}
#endif

#endif  // UTILITY_SENSOR_INC_OS8A10_SETTING_H_
